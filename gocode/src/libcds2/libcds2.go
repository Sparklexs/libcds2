/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

package libcds2



import _ "runtime/cgo"
import "unsafe"

type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

//extern libcds2SwigCgocall
func SwigCgocall()
//extern libcds2SwigCgocallDone
func SwigCgocallDone()
//extern libcds2SwigCgocallBack
func SwigCgocallBack()
//extern libcds2SwigCgocallBackDone
func SwigCgocallBackDone()

func GetKWordSize() int
func GetKDoubleWordSize() int
func GetKBytesPerWord() int
func GetKMaxCDSUchar() int
func GetKMaxCDSUint() int
func GetKMaxCDSUshort() int
func GetKMaxCDSUlong() int
func GetKMaxCDSWord() int
func BitGet(*int, int) bool
func _swig_wrap_BitOne(*int, int)

func BitOne(arg1 *int, arg2 int) {
	_swig_wrap_BitOne(arg1, arg2)
}

func _swig_wrap_BitZero(*int, int)

func BitZero(arg1 *int, arg2 int) {
	_swig_wrap_BitZero(arg1, arg2)
}

func _swig_wrap_BitSet__SWIG_0(*int, int, bool)

func BitSet__SWIG_0(arg1 *int, arg2 int, arg3 bool) {
	_swig_wrap_BitSet__SWIG_0(arg1, arg2, arg3)
}

func _swig_wrap_BitSet__SWIG_1(*int, int)

func BitSet__SWIG_1(arg1 *int, arg2 int) {
	_swig_wrap_BitSet__SWIG_1(arg1, arg2)
}

func BitSet(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		BitSet__SWIG_1(a[0].(*int), a[1].(int))
		return
	}
	if argc == 3 {
		BitSet__SWIG_0(a[0].(*int), a[1].(int), a[2].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func WordsLength(int, int) int
func SafeCeil(int, int) int
func GetVarField(*int, int, int) int
func _swig_wrap_SetVarField(*int, int, int, int)

func SetVarField(arg1 *int, arg2 int, arg3 int, arg4 int) {
	_swig_wrap_SetVarField(arg1, arg2, arg3, arg4)
}

func GetField(*int, int, int) int
func _swig_wrap_SetField(*int, int, int, int)

func SetField(arg1 *int, arg2 int, arg3 int, arg4 int) {
	_swig_wrap_SetField(arg1, arg2, arg3, arg4)
}

func GetField8(*int, int) int
func GetField16(*int, int) int
func GetField32(*int, int) int
func GetField2(*int, int) int
func GetField4(*int, int) int
func Msb(int) int
func Popcount(int) int
func Lsb(int) int
func Xselect(int, int) int
func _swig_wrap_PrintBinary(int)

func PrintBinary(arg1 int) {
	_swig_wrap_PrintBinary(arg1)
}

type SwigcptrReferenceCounted uintptr

func (p SwigcptrReferenceCounted) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrReferenceCounted) SwigIsReferenceCounted() {
}

func _swig_wrap_new_ReferenceCounted() SwigcptrReferenceCounted

func NewReferenceCounted() ReferenceCounted {
	return _swig_wrap_new_ReferenceCounted()
}

func _swig_wrap_delete_ReferenceCounted(uintptr)

func DeleteReferenceCounted(arg1 ReferenceCounted) {
	_swig_wrap_delete_ReferenceCounted(arg1.Swigcptr())
}

func _swig_wrap_ReferenceCounted_Unuse(SwigcptrReferenceCounted)

func (arg1 SwigcptrReferenceCounted) Unuse() {
	_swig_wrap_ReferenceCounted_Unuse(arg1)
}

func _swig_wrap_ReferenceCounted_Use(SwigcptrReferenceCounted)

func (arg1 SwigcptrReferenceCounted) Use() {
	_swig_wrap_ReferenceCounted_Use(arg1)
}

type ReferenceCounted interface {
	Swigcptr() uintptr
	SwigIsReferenceCounted()
	Unuse()
	Use()
}

func GetKBitSequenceOneLevelRankID() int
type SwigcptrBitSequence uintptr

func (p SwigcptrBitSequence) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBitSequence) SwigIsBitSequence() {
}

func _swig_wrap_delete_BitSequence(uintptr)

func DeleteBitSequence(arg1 BitSequence) {
	_swig_wrap_delete_BitSequence(arg1.Swigcptr())
}

func _swig_wrap_BitSequence_Rank0__SWIG_0(SwigcptrBitSequence, int) int

func (arg1 SwigcptrBitSequence) Rank0__SWIG_0(arg2 int) int {
	return _swig_wrap_BitSequence_Rank0__SWIG_0(arg1, arg2)
}

func _swig_wrap_BitSequence_Rank0__SWIG_1(SwigcptrBitSequence, int, *bool) int

func (arg1 SwigcptrBitSequence) Rank0__SWIG_1(arg2 int, arg3 *bool) int {
	return _swig_wrap_BitSequence_Rank0__SWIG_1(arg1, arg2, arg3)
}

func (p SwigcptrBitSequence) Rank0(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return p.Rank0__SWIG_0(a[0].(int))
	}
	if argc == 2 {
		return p.Rank0__SWIG_1(a[0].(int), a[1].(*bool))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_BitSequence_Select0__SWIG_0(SwigcptrBitSequence, int) int

func (arg1 SwigcptrBitSequence) Select0__SWIG_0(arg2 int) int {
	return _swig_wrap_BitSequence_Select0__SWIG_0(arg1, arg2)
}

func _swig_wrap_BitSequence_Select0__SWIG_1(SwigcptrBitSequence, int, int, int) int

func (arg1 SwigcptrBitSequence) Select0__SWIG_1(arg2 int, arg3 int, arg4 int) int {
	return _swig_wrap_BitSequence_Select0__SWIG_1(arg1, arg2, arg3, arg4)
}

func (p SwigcptrBitSequence) Select0(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return p.Select0__SWIG_0(a[0].(int))
	}
	if argc == 3 {
		return p.Select0__SWIG_1(a[0].(int), a[1].(int), a[2].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_BitSequence_Rank1__SWIG_0(SwigcptrBitSequence, int) int

func (arg1 SwigcptrBitSequence) Rank1__SWIG_0(arg2 int) int {
	return _swig_wrap_BitSequence_Rank1__SWIG_0(arg1, arg2)
}

func _swig_wrap_BitSequence_Rank1__SWIG_1(SwigcptrBitSequence, int, *bool) int

func (arg1 SwigcptrBitSequence) Rank1__SWIG_1(arg2 int, arg3 *bool) int {
	return _swig_wrap_BitSequence_Rank1__SWIG_1(arg1, arg2, arg3)
}

func (p SwigcptrBitSequence) Rank1(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return p.Rank1__SWIG_0(a[0].(int))
	}
	if argc == 2 {
		return p.Rank1__SWIG_1(a[0].(int), a[1].(*bool))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_BitSequence_Select1__SWIG_0(SwigcptrBitSequence, int) int

func (arg1 SwigcptrBitSequence) Select1__SWIG_0(arg2 int) int {
	return _swig_wrap_BitSequence_Select1__SWIG_0(arg1, arg2)
}

func _swig_wrap_BitSequence_Select1__SWIG_1(SwigcptrBitSequence, int, int, int) int

func (arg1 SwigcptrBitSequence) Select1__SWIG_1(arg2 int, arg3 int, arg4 int) int {
	return _swig_wrap_BitSequence_Select1__SWIG_1(arg1, arg2, arg3, arg4)
}

func (p SwigcptrBitSequence) Select1(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return p.Select1__SWIG_0(a[0].(int))
	}
	if argc == 3 {
		return p.Select1__SWIG_1(a[0].(int), a[1].(int), a[2].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_BitSequence_SelectNext1(SwigcptrBitSequence, int) int

func (arg1 SwigcptrBitSequence) SelectNext1(arg2 int) int {
	return _swig_wrap_BitSequence_SelectNext1(arg1, arg2)
}

func _swig_wrap_BitSequence_SelectNext0(SwigcptrBitSequence, int) int

func (arg1 SwigcptrBitSequence) SelectNext0(arg2 int) int {
	return _swig_wrap_BitSequence_SelectNext0(arg1, arg2)
}

func _swig_wrap_BitSequence_SelectPrev1(SwigcptrBitSequence, int) int

func (arg1 SwigcptrBitSequence) SelectPrev1(arg2 int) int {
	return _swig_wrap_BitSequence_SelectPrev1(arg1, arg2)
}

func _swig_wrap_BitSequence_SelectPrev0(SwigcptrBitSequence, int) int

func (arg1 SwigcptrBitSequence) SelectPrev0(arg2 int) int {
	return _swig_wrap_BitSequence_SelectPrev0(arg1, arg2)
}

func _swig_wrap_BitSequence_Access__SWIG_0(SwigcptrBitSequence, int) bool

func (arg1 SwigcptrBitSequence) Access__SWIG_0(arg2 int) bool {
	return _swig_wrap_BitSequence_Access__SWIG_0(arg1, arg2)
}

func _swig_wrap_BitSequence_Access__SWIG_1(SwigcptrBitSequence, int, *int) bool

func (arg1 SwigcptrBitSequence) Access__SWIG_1(arg2 int, arg3 *int) bool {
	return _swig_wrap_BitSequence_Access__SWIG_1(arg1, arg2, arg3)
}

func (p SwigcptrBitSequence) Access(a ...interface{}) bool {
	argc := len(a)
	if argc == 1 {
		return p.Access__SWIG_0(a[0].(int))
	}
	if argc == 2 {
		return p.Access__SWIG_1(a[0].(int), a[1].(*int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_BitSequence_GetLength(SwigcptrBitSequence) int

func (arg1 SwigcptrBitSequence) GetLength() int {
	return _swig_wrap_BitSequence_GetLength(arg1)
}

func _swig_wrap_BitSequence_CountOnes(SwigcptrBitSequence) int

func (arg1 SwigcptrBitSequence) CountOnes() int {
	return _swig_wrap_BitSequence_CountOnes(arg1)
}

func _swig_wrap_BitSequence_CountZeros(SwigcptrBitSequence) int

func (arg1 SwigcptrBitSequence) CountZeros() int {
	return _swig_wrap_BitSequence_CountZeros(arg1)
}

func _swig_wrap_BitSequence_GetSize(SwigcptrBitSequence) int

func (arg1 SwigcptrBitSequence) GetSize() int {
	return _swig_wrap_BitSequence_GetSize(arg1)
}

func _swig_wrap_BitSequence_Save(SwigcptrBitSequence, uintptr)

func (arg1 SwigcptrBitSequence) Save(arg2 Ostream) {
	_swig_wrap_BitSequence_Save(arg1, arg2.Swigcptr())
}

func _swig_wrap_BitSequence_Load(uintptr) SwigcptrBitSequence

func BitSequenceLoad(arg1 Istream) BitSequence {
	return _swig_wrap_BitSequence_Load(arg1.Swigcptr())
}

func _swig_wrap_BitSequence_Unuse(SwigcptrBitSequence)

func (_swig_base SwigcptrBitSequence) Unuse() {
	_swig_wrap_BitSequence_Unuse(_swig_base)
}

func _swig_wrap_BitSequence_Use(SwigcptrBitSequence)

func (_swig_base SwigcptrBitSequence) Use() {
	_swig_wrap_BitSequence_Use(_swig_base)
}

func (p SwigcptrBitSequence) SwigIsReferenceCounted() {
}

func (p SwigcptrBitSequence) SwigGetReferenceCounted() ReferenceCounted {
	return SwigcptrReferenceCounted(p.Swigcptr())
}

type BitSequence interface {
	Swigcptr() uintptr
	SwigIsBitSequence()
	Rank0(a ...interface{}) int
	Select0(a ...interface{}) int
	Rank1(a ...interface{}) int
	Select1(a ...interface{}) int
	SelectNext1(arg2 int) int
	SelectNext0(arg2 int) int
	SelectPrev1(arg2 int) int
	SelectPrev0(arg2 int) int
	Access(a ...interface{}) bool
	GetLength() int
	CountOnes() int
	CountZeros() int
	GetSize() int
	Save(arg2 Ostream)
	Unuse()
	Use()
	SwigIsReferenceCounted()
	SwigGetReferenceCounted() ReferenceCounted
}

type SwigcptrBitSequenceOneLevelRank uintptr

func (p SwigcptrBitSequenceOneLevelRank) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBitSequenceOneLevelRank) SwigIsBitSequenceOneLevelRank() {
}

func _swig_wrap_new_BitSequenceOneLevelRank(uintptr, int) SwigcptrBitSequenceOneLevelRank

func NewBitSequenceOneLevelRank(arg1 Array, arg2 int) BitSequenceOneLevelRank {
	return _swig_wrap_new_BitSequenceOneLevelRank(arg1.Swigcptr(), arg2)
}

func _swig_wrap_delete_BitSequenceOneLevelRank(uintptr)

func DeleteBitSequenceOneLevelRank(arg1 BitSequenceOneLevelRank) {
	_swig_wrap_delete_BitSequenceOneLevelRank(arg1.Swigcptr())
}

func _swig_wrap_BitSequenceOneLevelRank_Rank0(SwigcptrBitSequenceOneLevelRank, int, *bool) int

func (arg1 SwigcptrBitSequenceOneLevelRank) Rank0(arg2 int, arg3 *bool) int {
	return _swig_wrap_BitSequenceOneLevelRank_Rank0(arg1, arg2, arg3)
}

func _swig_wrap_BitSequenceOneLevelRank_Select0(SwigcptrBitSequenceOneLevelRank, int) int

func (arg1 SwigcptrBitSequenceOneLevelRank) Select0(arg2 int) int {
	return _swig_wrap_BitSequenceOneLevelRank_Select0(arg1, arg2)
}

func _swig_wrap_BitSequenceOneLevelRank_Rank1__SWIG_0(SwigcptrBitSequenceOneLevelRank, int) int

func (arg1 SwigcptrBitSequenceOneLevelRank) Rank1__SWIG_0(arg2 int) int {
	return _swig_wrap_BitSequenceOneLevelRank_Rank1__SWIG_0(arg1, arg2)
}

func _swig_wrap_BitSequenceOneLevelRank_Rank1__SWIG_1(SwigcptrBitSequenceOneLevelRank, int, *bool) int

func (arg1 SwigcptrBitSequenceOneLevelRank) Rank1__SWIG_1(arg2 int, arg3 *bool) int {
	return _swig_wrap_BitSequenceOneLevelRank_Rank1__SWIG_1(arg1, arg2, arg3)
}

func (p SwigcptrBitSequenceOneLevelRank) Rank1(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return p.Rank1__SWIG_0(a[0].(int))
	}
	if argc == 2 {
		return p.Rank1__SWIG_1(a[0].(int), a[1].(*bool))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_BitSequenceOneLevelRank_Select1(SwigcptrBitSequenceOneLevelRank, int) int

func (arg1 SwigcptrBitSequenceOneLevelRank) Select1(arg2 int) int {
	return _swig_wrap_BitSequenceOneLevelRank_Select1(arg1, arg2)
}

func _swig_wrap_BitSequenceOneLevelRank_SelectNext1(SwigcptrBitSequenceOneLevelRank, int) int

func (arg1 SwigcptrBitSequenceOneLevelRank) SelectNext1(arg2 int) int {
	return _swig_wrap_BitSequenceOneLevelRank_SelectNext1(arg1, arg2)
}

func _swig_wrap_BitSequenceOneLevelRank_Access__SWIG_0(SwigcptrBitSequenceOneLevelRank, int) bool

func (arg1 SwigcptrBitSequenceOneLevelRank) Access__SWIG_0(arg2 int) bool {
	return _swig_wrap_BitSequenceOneLevelRank_Access__SWIG_0(arg1, arg2)
}

func _swig_wrap_BitSequenceOneLevelRank_Access__SWIG_1(SwigcptrBitSequenceOneLevelRank, int, *int) bool

func (arg1 SwigcptrBitSequenceOneLevelRank) Access__SWIG_1(arg2 int, arg3 *int) bool {
	return _swig_wrap_BitSequenceOneLevelRank_Access__SWIG_1(arg1, arg2, arg3)
}

func (p SwigcptrBitSequenceOneLevelRank) Access(a ...interface{}) bool {
	argc := len(a)
	if argc == 1 {
		return p.Access__SWIG_0(a[0].(int))
	}
	if argc == 2 {
		return p.Access__SWIG_1(a[0].(int), a[1].(*int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_BitSequenceOneLevelRank_GetLength(SwigcptrBitSequenceOneLevelRank) int

func (arg1 SwigcptrBitSequenceOneLevelRank) GetLength() int {
	return _swig_wrap_BitSequenceOneLevelRank_GetLength(arg1)
}

func _swig_wrap_BitSequenceOneLevelRank_GetSize(SwigcptrBitSequenceOneLevelRank) int

func (arg1 SwigcptrBitSequenceOneLevelRank) GetSize() int {
	return _swig_wrap_BitSequenceOneLevelRank_GetSize(arg1)
}

func _swig_wrap_BitSequenceOneLevelRank_Save(SwigcptrBitSequenceOneLevelRank, uintptr)

func (arg1 SwigcptrBitSequenceOneLevelRank) Save(arg2 Ostream) {
	_swig_wrap_BitSequenceOneLevelRank_Save(arg1, arg2.Swigcptr())
}

func _swig_wrap_BitSequenceOneLevelRank_Load(uintptr) SwigcptrBitSequenceOneLevelRank

func BitSequenceOneLevelRankLoad(arg1 Istream) BitSequenceOneLevelRank {
	return _swig_wrap_BitSequenceOneLevelRank_Load(arg1.Swigcptr())
}

func _swig_wrap_BitSequenceOneLevelRank_SelectNext0(SwigcptrBitSequenceOneLevelRank, int) int

func (_swig_base SwigcptrBitSequenceOneLevelRank) SelectNext0(arg1 int) int {
	return _swig_wrap_BitSequenceOneLevelRank_SelectNext0(_swig_base, arg1)
}

func _swig_wrap_BitSequenceOneLevelRank_SelectPrev1(SwigcptrBitSequenceOneLevelRank, int) int

func (_swig_base SwigcptrBitSequenceOneLevelRank) SelectPrev1(arg1 int) int {
	return _swig_wrap_BitSequenceOneLevelRank_SelectPrev1(_swig_base, arg1)
}

func _swig_wrap_BitSequenceOneLevelRank_SelectPrev0(SwigcptrBitSequenceOneLevelRank, int) int

func (_swig_base SwigcptrBitSequenceOneLevelRank) SelectPrev0(arg1 int) int {
	return _swig_wrap_BitSequenceOneLevelRank_SelectPrev0(_swig_base, arg1)
}

func _swig_wrap_BitSequenceOneLevelRank_CountOnes(SwigcptrBitSequenceOneLevelRank) int

func (_swig_base SwigcptrBitSequenceOneLevelRank) CountOnes() int {
	return _swig_wrap_BitSequenceOneLevelRank_CountOnes(_swig_base)
}

func _swig_wrap_BitSequenceOneLevelRank_CountZeros(SwigcptrBitSequenceOneLevelRank) int

func (_swig_base SwigcptrBitSequenceOneLevelRank) CountZeros() int {
	return _swig_wrap_BitSequenceOneLevelRank_CountZeros(_swig_base)
}

func _swig_wrap_BitSequenceOneLevelRank_Unuse(SwigcptrBitSequenceOneLevelRank)

func (_swig_base SwigcptrBitSequenceOneLevelRank) Unuse() {
	_swig_wrap_BitSequenceOneLevelRank_Unuse(_swig_base)
}

func _swig_wrap_BitSequenceOneLevelRank_Use(SwigcptrBitSequenceOneLevelRank)

func (_swig_base SwigcptrBitSequenceOneLevelRank) Use() {
	_swig_wrap_BitSequenceOneLevelRank_Use(_swig_base)
}

func (p SwigcptrBitSequenceOneLevelRank) SwigIsBitSequence() {
}

func (p SwigcptrBitSequenceOneLevelRank) SwigGetBitSequence() BitSequence {
	return SwigcptrBitSequence(p.Swigcptr())
}

func (p SwigcptrBitSequenceOneLevelRank) SwigIsReferenceCounted() {
}

func (p SwigcptrBitSequenceOneLevelRank) SwigGetReferenceCounted() ReferenceCounted {
	return SwigcptrReferenceCounted(p.Swigcptr())
}

type BitSequenceOneLevelRank interface {
	Swigcptr() uintptr
	SwigIsBitSequenceOneLevelRank()
	Rank0(arg2 int, arg3 *bool) int
	Select0(arg2 int) int
	Rank1(a ...interface{}) int
	Select1(arg2 int) int
	SelectNext1(arg2 int) int
	Access(a ...interface{}) bool
	GetLength() int
	GetSize() int
	Save(arg2 Ostream)
	SelectNext0(arg1 int) int
	SelectPrev1(arg1 int) int
	SelectPrev0(arg1 int) int
	CountOnes() int
	CountZeros() int
	Unuse()
	Use()
	SwigIsBitSequence()
	SwigGetBitSequence() BitSequence
	SwigIsReferenceCounted()
	SwigGetReferenceCounted() ReferenceCounted
}

type SwigcptrArray uintptr

func (p SwigcptrArray) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrArray) SwigIsArray() {
}

func _swig_wrap_delete_Array(uintptr)

func DeleteArray(arg1 Array) {
	_swig_wrap_delete_Array(arg1.Swigcptr())
}

func _swig_wrap_Array_GetField(SwigcptrArray, int) int

func (arg1 SwigcptrArray) GetField(arg2 int) int {
	return _swig_wrap_Array_GetField(arg1, arg2)
}

func _swig_wrap_Array_SetField(SwigcptrArray, int, int) int

func (arg1 SwigcptrArray) SetField(arg2 int, arg3 int) int {
	return _swig_wrap_Array_SetField(arg1, arg2, arg3)
}

func _swig_wrap_Array_Save(SwigcptrArray, uintptr)

func (arg1 SwigcptrArray) Save(arg2 Ostream) {
	_swig_wrap_Array_Save(arg1, arg2.Swigcptr())
}

func _swig_wrap_Array_GetSize(SwigcptrArray) int

func (arg1 SwigcptrArray) GetSize() int {
	return _swig_wrap_Array_GetSize(arg1)
}

func _swig_wrap_Array_GetLength(SwigcptrArray) int

func (arg1 SwigcptrArray) GetLength() int {
	return _swig_wrap_Array_GetLength(arg1)
}

func _swig_wrap_Array_GetMax(SwigcptrArray) int

func (arg1 SwigcptrArray) GetMax() int {
	return _swig_wrap_Array_GetMax(arg1)
}

func _swig_wrap_Array_LowerBound__SWIG_0(SwigcptrArray, int, int, int) int

func (arg1 SwigcptrArray) LowerBound__SWIG_0(arg2 int, arg3 int, arg4 int) int {
	return _swig_wrap_Array_LowerBound__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_Array_LowerBound__SWIG_1(SwigcptrArray, int) int

func (arg1 SwigcptrArray) LowerBound__SWIG_1(arg2 int) int {
	return _swig_wrap_Array_LowerBound__SWIG_1(arg1, arg2)
}

func (p SwigcptrArray) LowerBound(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return p.LowerBound__SWIG_1(a[0].(int))
	}
	if argc == 3 {
		return p.LowerBound__SWIG_0(a[0].(int), a[1].(int), a[2].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_Array_LowerBoundExp__SWIG_0(SwigcptrArray, int, int, int) int

func (arg1 SwigcptrArray) LowerBoundExp__SWIG_0(arg2 int, arg3 int, arg4 int) int {
	return _swig_wrap_Array_LowerBoundExp__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_Array_LowerBoundExp__SWIG_1(SwigcptrArray, int) int

func (arg1 SwigcptrArray) LowerBoundExp__SWIG_1(arg2 int) int {
	return _swig_wrap_Array_LowerBoundExp__SWIG_1(arg1, arg2)
}

func (p SwigcptrArray) LowerBoundExp(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return p.LowerBoundExp__SWIG_1(a[0].(int))
	}
	if argc == 3 {
		return p.LowerBoundExp__SWIG_0(a[0].(int), a[1].(int), a[2].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_Array_UpperBound__SWIG_0(SwigcptrArray, int, int, int) int

func (arg1 SwigcptrArray) UpperBound__SWIG_0(arg2 int, arg3 int, arg4 int) int {
	return _swig_wrap_Array_UpperBound__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_Array_UpperBound__SWIG_1(SwigcptrArray, int) int

func (arg1 SwigcptrArray) UpperBound__SWIG_1(arg2 int) int {
	return _swig_wrap_Array_UpperBound__SWIG_1(arg1, arg2)
}

func (p SwigcptrArray) UpperBound(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return p.UpperBound__SWIG_1(a[0].(int))
	}
	if argc == 3 {
		return p.UpperBound__SWIG_0(a[0].(int), a[1].(int), a[2].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_Array_BinarySearch__SWIG_0(SwigcptrArray, int, int, int) int

func (arg1 SwigcptrArray) BinarySearch__SWIG_0(arg2 int, arg3 int, arg4 int) int {
	return _swig_wrap_Array_BinarySearch__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_Array_BinarySearch__SWIG_1(SwigcptrArray, int) int

func (arg1 SwigcptrArray) BinarySearch__SWIG_1(arg2 int) int {
	return _swig_wrap_Array_BinarySearch__SWIG_1(arg1, arg2)
}

func (p SwigcptrArray) BinarySearch(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return p.BinarySearch__SWIG_1(a[0].(int))
	}
	if argc == 3 {
		return p.BinarySearch__SWIG_0(a[0].(int), a[1].(int), a[2].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_Array_Load(uintptr) SwigcptrArray

func ArrayLoad(arg1 Istream) Array {
	return _swig_wrap_Array_Load(arg1.Swigcptr())
}

func _swig_wrap_Array_Create__SWIG_0(*int, int, int, int) SwigcptrArray

func ArrayCreate__SWIG_0(arg1 *int, arg2 int, arg3 int, arg4 int) Array {
	return _swig_wrap_Array_Create__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_Array_Create__SWIG_1(*int, int, int) SwigcptrArray

func ArrayCreate__SWIG_1(arg1 *int, arg2 int, arg3 int) Array {
	return _swig_wrap_Array_Create__SWIG_1(arg1, arg2, arg3)
}

func _swig_wrap_Array_Create__SWIG_2(int, int) SwigcptrArray

func ArrayCreate__SWIG_2(arg1 int, arg2 int) Array {
	return _swig_wrap_Array_Create__SWIG_2(arg1, arg2)
}

func ArrayCreate(a ...interface{}) Array {
	argc := len(a)
	if argc == 2 {
		return ArrayCreate__SWIG_2(a[0].(int), a[1].(int))
	}
	if argc == 3 {
		return ArrayCreate__SWIG_1(a[0].(*int), a[1].(int), a[2].(int))
	}
	if argc == 4 {
		return ArrayCreate__SWIG_0(a[0].(*int), a[1].(int), a[2].(int), a[3].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_Array_Unuse(SwigcptrArray)

func (_swig_base SwigcptrArray) Unuse() {
	_swig_wrap_Array_Unuse(_swig_base)
}

func _swig_wrap_Array_Use(SwigcptrArray)

func (_swig_base SwigcptrArray) Use() {
	_swig_wrap_Array_Use(_swig_base)
}

func (p SwigcptrArray) SwigIsReferenceCounted() {
}

func (p SwigcptrArray) SwigGetReferenceCounted() ReferenceCounted {
	return SwigcptrReferenceCounted(p.Swigcptr())
}

type Array interface {
	Swigcptr() uintptr
	SwigIsArray()
	GetField(arg2 int) int
	SetField(arg2 int, arg3 int) int
	Save(arg2 Ostream)
	GetSize() int
	GetLength() int
	GetMax() int
	LowerBound(a ...interface{}) int
	LowerBoundExp(a ...interface{}) int
	UpperBound(a ...interface{}) int
	BinarySearch(a ...interface{}) int
	Unuse()
	Use()
	SwigIsReferenceCounted()
	SwigGetReferenceCounted() ReferenceCounted
}

const MAPPER_NONE_HDR int = 2
const MAPPER_CONT_HDR int = 3
type SwigcptrMapper uintptr

func (p SwigcptrMapper) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMapper) SwigIsMapper() {
}

func _swig_wrap_delete_Mapper(uintptr)

func DeleteMapper(arg1 Mapper) {
	_swig_wrap_delete_Mapper(arg1.Swigcptr())
}

func _swig_wrap_Mapper_Map(SwigcptrMapper, int) int

func (arg1 SwigcptrMapper) Map(arg2 int) int {
	return _swig_wrap_Mapper_Map(arg1, arg2)
}

func _swig_wrap_Mapper_Unmap(SwigcptrMapper, int) int

func (arg1 SwigcptrMapper) Unmap(arg2 int) int {
	return _swig_wrap_Mapper_Unmap(arg1, arg2)
}

func _swig_wrap_Mapper_GetSize(SwigcptrMapper) int

func (arg1 SwigcptrMapper) GetSize() int {
	return _swig_wrap_Mapper_GetSize(arg1)
}

func _swig_wrap_Mapper_Save(SwigcptrMapper, uintptr)

func (arg1 SwigcptrMapper) Save(arg2 Ostream) {
	_swig_wrap_Mapper_Save(arg1, arg2.Swigcptr())
}

func _swig_wrap_Mapper_Load(uintptr) SwigcptrMapper

func MapperLoad(arg1 Istream) Mapper {
	return _swig_wrap_Mapper_Load(arg1.Swigcptr())
}

func _swig_wrap_Mapper_Unuse(SwigcptrMapper)

func (_swig_base SwigcptrMapper) Unuse() {
	_swig_wrap_Mapper_Unuse(_swig_base)
}

func _swig_wrap_Mapper_Use(SwigcptrMapper)

func (_swig_base SwigcptrMapper) Use() {
	_swig_wrap_Mapper_Use(_swig_base)
}

func (p SwigcptrMapper) SwigIsReferenceCounted() {
}

func (p SwigcptrMapper) SwigGetReferenceCounted() ReferenceCounted {
	return SwigcptrReferenceCounted(p.Swigcptr())
}

type Mapper interface {
	Swigcptr() uintptr
	SwigIsMapper()
	Map(arg2 int) int
	Unmap(arg2 int) int
	GetSize() int
	Save(arg2 Ostream)
	Unuse()
	Use()
	SwigIsReferenceCounted()
	SwigGetReferenceCounted() ReferenceCounted
}

type SwigcptrMapperNone uintptr

func (p SwigcptrMapperNone) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMapperNone) SwigIsMapperNone() {
}

func _swig_wrap_new_MapperNone() SwigcptrMapperNone

func NewMapperNone() MapperNone {
	return _swig_wrap_new_MapperNone()
}

func _swig_wrap_delete_MapperNone(uintptr)

func DeleteMapperNone(arg1 MapperNone) {
	_swig_wrap_delete_MapperNone(arg1.Swigcptr())
}

func _swig_wrap_MapperNone_Map(SwigcptrMapperNone, int) int

func (arg1 SwigcptrMapperNone) Map(arg2 int) int {
	return _swig_wrap_MapperNone_Map(arg1, arg2)
}

func _swig_wrap_MapperNone_Unmap(SwigcptrMapperNone, int) int

func (arg1 SwigcptrMapperNone) Unmap(arg2 int) int {
	return _swig_wrap_MapperNone_Unmap(arg1, arg2)
}

func _swig_wrap_MapperNone_GetSize(SwigcptrMapperNone) int

func (arg1 SwigcptrMapperNone) GetSize() int {
	return _swig_wrap_MapperNone_GetSize(arg1)
}

func _swig_wrap_MapperNone_Save(SwigcptrMapperNone, uintptr)

func (arg1 SwigcptrMapperNone) Save(arg2 Ostream) {
	_swig_wrap_MapperNone_Save(arg1, arg2.Swigcptr())
}

func _swig_wrap_MapperNone_Load(uintptr) SwigcptrMapperNone

func MapperNoneLoad(arg1 Istream) MapperNone {
	return _swig_wrap_MapperNone_Load(arg1.Swigcptr())
}

func _swig_wrap_MapperNone_Unuse(SwigcptrMapperNone)

func (_swig_base SwigcptrMapperNone) Unuse() {
	_swig_wrap_MapperNone_Unuse(_swig_base)
}

func _swig_wrap_MapperNone_Use(SwigcptrMapperNone)

func (_swig_base SwigcptrMapperNone) Use() {
	_swig_wrap_MapperNone_Use(_swig_base)
}

func (p SwigcptrMapperNone) SwigIsMapper() {
}

func (p SwigcptrMapperNone) SwigGetMapper() Mapper {
	return SwigcptrMapper(p.Swigcptr())
}

func (p SwigcptrMapperNone) SwigIsReferenceCounted() {
}

func (p SwigcptrMapperNone) SwigGetReferenceCounted() ReferenceCounted {
	return SwigcptrReferenceCounted(p.Swigcptr())
}

type MapperNone interface {
	Swigcptr() uintptr
	SwigIsMapperNone()
	Map(arg2 int) int
	Unmap(arg2 int) int
	GetSize() int
	Save(arg2 Ostream)
	Unuse()
	Use()
	SwigIsMapper()
	SwigGetMapper() Mapper
	SwigIsReferenceCounted()
	SwigGetReferenceCounted() ReferenceCounted
}

const CODER_NONE_HDR int = 4
type SwigcptrCoder uintptr

func (p SwigcptrCoder) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrCoder) SwigIsCoder() {
}

func _swig_wrap_delete_Coder(uintptr)

func DeleteCoder(arg1 Coder) {
	_swig_wrap_delete_Coder(arg1.Swigcptr())
}

func _swig_wrap_Coder_Encode(SwigcptrCoder, int, *int, *int)

func (arg1 SwigcptrCoder) Encode(arg2 int, arg3 *int, arg4 *int) {
	_swig_wrap_Coder_Encode(arg1, arg2, arg3, arg4)
}

func _swig_wrap_Coder_Decode(SwigcptrCoder, *int, *int) int

func (arg1 SwigcptrCoder) Decode(arg2 *int, arg3 *int) int {
	return _swig_wrap_Coder_Decode(arg1, arg2, arg3)
}

func _swig_wrap_Coder_MaxLength(SwigcptrCoder) int

func (arg1 SwigcptrCoder) MaxLength() int {
	return _swig_wrap_Coder_MaxLength(arg1)
}

func _swig_wrap_Coder_GetSize(SwigcptrCoder) int

func (arg1 SwigcptrCoder) GetSize() int {
	return _swig_wrap_Coder_GetSize(arg1)
}

func _swig_wrap_Coder_Save(SwigcptrCoder, uintptr)

func (arg1 SwigcptrCoder) Save(arg2 Ostream) {
	_swig_wrap_Coder_Save(arg1, arg2.Swigcptr())
}

func _swig_wrap_Coder_Load(uintptr) SwigcptrCoder

func CoderLoad(arg1 Istream) Coder {
	return _swig_wrap_Coder_Load(arg1.Swigcptr())
}

func _swig_wrap_Coder_Unuse(SwigcptrCoder)

func (_swig_base SwigcptrCoder) Unuse() {
	_swig_wrap_Coder_Unuse(_swig_base)
}

func _swig_wrap_Coder_Use(SwigcptrCoder)

func (_swig_base SwigcptrCoder) Use() {
	_swig_wrap_Coder_Use(_swig_base)
}

func (p SwigcptrCoder) SwigIsReferenceCounted() {
}

func (p SwigcptrCoder) SwigGetReferenceCounted() ReferenceCounted {
	return SwigcptrReferenceCounted(p.Swigcptr())
}

type Coder interface {
	Swigcptr() uintptr
	SwigIsCoder()
	Encode(arg2 int, arg3 *int, arg4 *int)
	Decode(arg2 *int, arg3 *int) int
	MaxLength() int
	GetSize() int
	Save(arg2 Ostream)
	Unuse()
	Use()
	SwigIsReferenceCounted()
	SwigGetReferenceCounted() ReferenceCounted
}

type SwigcptrCoderNone uintptr

func (p SwigcptrCoderNone) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrCoderNone) SwigIsCoderNone() {
}

func _swig_wrap_new_CoderNone() SwigcptrCoderNone

func NewCoderNone() CoderNone {
	return _swig_wrap_new_CoderNone()
}

func _swig_wrap_delete_CoderNone(uintptr)

func DeleteCoderNone(arg1 CoderNone) {
	_swig_wrap_delete_CoderNone(arg1.Swigcptr())
}

func _swig_wrap_CoderNone_Encode(SwigcptrCoderNone, int, *int, *int)

func (arg1 SwigcptrCoderNone) Encode(arg2 int, arg3 *int, arg4 *int) {
	_swig_wrap_CoderNone_Encode(arg1, arg2, arg3, arg4)
}

func _swig_wrap_CoderNone_Decode(SwigcptrCoderNone, *int, *int) int

func (arg1 SwigcptrCoderNone) Decode(arg2 *int, arg3 *int) int {
	return _swig_wrap_CoderNone_Decode(arg1, arg2, arg3)
}

func _swig_wrap_CoderNone_MaxLength(SwigcptrCoderNone) int

func (arg1 SwigcptrCoderNone) MaxLength() int {
	return _swig_wrap_CoderNone_MaxLength(arg1)
}

func _swig_wrap_CoderNone_GetSize(SwigcptrCoderNone) int

func (arg1 SwigcptrCoderNone) GetSize() int {
	return _swig_wrap_CoderNone_GetSize(arg1)
}

func _swig_wrap_CoderNone_Save(SwigcptrCoderNone, uintptr)

func (arg1 SwigcptrCoderNone) Save(arg2 Ostream) {
	_swig_wrap_CoderNone_Save(arg1, arg2.Swigcptr())
}

func _swig_wrap_CoderNone_Load(uintptr) SwigcptrCoderNone

func CoderNoneLoad(arg1 Istream) CoderNone {
	return _swig_wrap_CoderNone_Load(arg1.Swigcptr())
}

func _swig_wrap_CoderNone_Unuse(SwigcptrCoderNone)

func (_swig_base SwigcptrCoderNone) Unuse() {
	_swig_wrap_CoderNone_Unuse(_swig_base)
}

func _swig_wrap_CoderNone_Use(SwigcptrCoderNone)

func (_swig_base SwigcptrCoderNone) Use() {
	_swig_wrap_CoderNone_Use(_swig_base)
}

func (p SwigcptrCoderNone) SwigIsCoder() {
}

func (p SwigcptrCoderNone) SwigGetCoder() Coder {
	return SwigcptrCoder(p.Swigcptr())
}

func (p SwigcptrCoderNone) SwigIsReferenceCounted() {
}

func (p SwigcptrCoderNone) SwigGetReferenceCounted() ReferenceCounted {
	return SwigcptrReferenceCounted(p.Swigcptr())
}

type CoderNone interface {
	Swigcptr() uintptr
	SwigIsCoderNone()
	Encode(arg2 int, arg3 *int, arg4 *int)
	Decode(arg2 *int, arg3 *int) int
	MaxLength() int
	GetSize() int
	Save(arg2 Ostream)
	Unuse()
	Use()
	SwigIsCoder()
	SwigGetCoder() Coder
	SwigIsReferenceCounted()
	SwigGetReferenceCounted() ReferenceCounted
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrOstream uintptr
type Ostream interface {
	Swigcptr() uintptr;
}
func (p SwigcptrOstream) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrIstream uintptr
type Istream interface {
	Swigcptr() uintptr;
}
func (p SwigcptrIstream) Swigcptr() uintptr {
	return uintptr(p)
}

